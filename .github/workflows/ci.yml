name: CI
on:
  push:
  schedule:
    - cron: "0 4 * * *"

env:
  PKGDEST: /home/ci/pkgs
  AURROOT: /home/ci/aur
  PACKAGER: "Tomáš Pecka <tomaspecka@gmail.com>"
  REPONAME: user

jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: archlinux
      options: --privileged --device /dev/fuse
      volumes:
        - ${{ github.workspace }}:/home/ci/github
        - /tmp:/tmp
    steps:
      - name: Install packages
        run: pacman -Suy --noconfirm base-devel sudo devtools sshfs

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Prepare environment
        run: |
          useradd ci -M
          echo "PACKAGER=\"${PACKAGER}\"" >> /etc/makepkg.conf
          echo "PKGDEST=${PKGDEST}" >> /etc/makepkg.conf
          echo "MAKEFLAGS=\"-j$(nproc)\"" >> /etc/makepkg.conf
          echo "ci ALL= NOPASSWD: /usr/bin/pacman" >> /etc/sudoers
          mkdir -p ${PKGDEST} ${AURROOT}
          chown -R ci:ci /home/ci
          chmod -R 777 /home/ci
        working-directory: /home/ci

      - name: Build packages from AUR
        run: |
          while read -r package; do
            echo "Retrieving ${package}"
            sudo -u ci git clone "https://aur.archlinux.org/${package}.git"
            pushd "${package}"
            sudo -u ci makepkg -s --noconfirm
            popd
          done < /home/ci/github/aur.txt
        working-directory: /home/ci/aur

      - name: Build custom packages
        run: |
          for package in */; do
            pushd "${package}"
            echo "Building ${package%/}"
            sudo -u ci makepkg -s --noconfirm
            popd
          done
        working-directory: /home/ci/github

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: /home/ci/pkgs/*

      - name: Prepare deployment
        run: |
          mkdir -p /root/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > /root/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /root/.ssh/id_ed25519
          chmod 400 /root/.ssh/id_ed25519
          mkdir /home/ci/remote
          sshfs -o allow_other -o idmap=user "${{ secrets.SSH_REMOTE }}" /home/ci/remote
          rm /root/.ssh/id_ed25519

      - name: Deploy artifacts
        run: |
          rm -fr *
          cp ${PKGDEST}/* .
          repo-add ${REPONAME}.db.tar.xz *.pkg.*
        working-directory: /home/ci/remote/

      - name: Unmount remote FS
        if: ${{ always() }}
        run: umount /home/ci/remote
